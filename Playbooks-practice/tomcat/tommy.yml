---
  - name: install tomcat
    become: yes
    hosts: appserver
    vars:
      - home_directory:  /opt/tomcat
      - username: tomcat
      - shell_directory: /bin/false
      - tomcat_version: 9.0.62
      - tomcat_latest: /opt/tomcat/latest
      - tomcat_sh_bin_files: /opt/tomcat/latest/bin/
      - tomcat_service_location: /etc/systemd/system/tomcat.service
    tasks:
      - name: update-cache
        apt:
          update_cache: yes
        when: ansible_facts['os_family']=="Debain"
      - name: install openjdk-11-jdk
        package:
          name: "{{java_package}}"
        when: ansible_facts['os_family']=="Debain"
      - name: adding user tomcat
        ansible.builtin.user:
          create_home: yes
          name: "{{ username }}"
          home: "{{ home_directory }}"
          shell: "{{ shell_directory }}"
          state: present
        when: ansible_facts['os_family']=="Debain"
      - name: download tomcat using url
        get_url:
          url: "https://www-eu.apache.org/dist/tomcat/tomcat-9/v{ tomcat_version}/bin/apache-tomcat-{ tomcat_version}.tar.gz"
          dest: "/tmp/apache-tomcat-{ tomcat_version}.tar.gz"
        when: ansible_facts['os_family']=="Debain"
      - name: extract tomcat
        ansible.builtin.unarchive:
          src: "/tmp/apache-tomcat-{ tomcat_version}.tar.gz"
          dest: "{{ home_directory }}/tmp/apache-tomcat-{ tomcat_version}.tar.gz"
          remote_src: yes
          owner: "{{ username }}"
          group: "{{ username }}" 
        when: ansible_facts['os_family']=="Debain"
      - name: creating symlink
        ansible.builtin.file:
           src:  "{{ home_directory }}/tmp/apache-tomcat-{ tomcat_version}.tar.gz"
           dest: "{{ tomcat_latest }}"
           owner: "{{ username }}"
           group: "{{ username }}"
           state: link
        when: ansible_facts['os_family']=="Debain"
      - name: recursively changing the owner of directory
        ansible.builtin.file:
          path:  "{{ home_directory }}"
          state: directory
          recurse: yes
          owner: "{{ username }}"
          group: "{{ username }}"
        when: ansible_facts['os_family']=="Debain"
      - name: finding .sh files in bin directory
        find:
          paths: "{{ tomcat_sh_bin_files }}"
          patterns: "*.sh"
        when: ansible_facts['os_family']=="Debain"
        register: "sh_files_bin"
      - name: print the previous one
        debug:
          var: sh_files_bin
      - name: make shell scripts executable
        ansible.builtin.file:
          path: "{{ items.path }}"
          owner: "{{ username }}"
          group: "{{ username }}"
          mode: '0755'
        loop: "{{ sh_files_bin.files }}"
        when: ansible_facts['os_family']=="Debain"
      - name: copy tomcat services
        ansible.builtin.copy:
          src: tomcat.service
          dest: "{{ tomcat_service_location }}"
          owner: "{{ username }}"
          group: "{{ username }}"
        when: ansible_facts['os_family']=="Debain"
      - name: reload daemon 
        ansible.builtin.systemd:
          name: 'tomcat.service'
          daemon_reload: yes
          enabled: yes
          state: started
        when: ansible_facts['os_family']=="Debain"  